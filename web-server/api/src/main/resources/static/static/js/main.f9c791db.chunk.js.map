{"version":3,"sources":["api/initCityApi.js","atom.js","utils/KakaoMapUtil.js","components/map/KakaoMap.js","api/index.js","api/initPlaceApi.js","utils/FilterUtil.js","components/filter/FilterSelect.js","components/filter/KakaoSlider.js","components/filter/NaverSlider.js","components/filter/FilterForm.js","components/foodList/FoodList.js","components/SideBar.js","screens/HotPlaceMapScreen.js","App.js","reportWebVitals.js","index.js"],"names":["axios","guState","atom","key","default","dongState","subCategoryState","storeState","queryState","gu","dong","sub_category","place_name","minimum_kakao_rating","minimum_naver_rating","minimum_instagram_hashtag","foodListState","id","name","naverRating","kakaoRating","instagramHashtag","makeInfoWindow","place","address","kakao_url","naver_url","instagram_url","instagram_hashtag","kakao_star","naver_star","KakaoMapContainer","styled","div","kakao","window","KakaoMap","props","map","useRef","mapContainerRef","useState","markers","setMarkers","setInfoWindows","useRecoilState","storeList","useEffect","options","center","maps","LatLng","level","current","Map","makeOverListener","marker","infowindow","open","panTo","latitude_y","longitude_x","moveLatLon","parseFloat","clearMarkers","i","length","setMap","places","avg_latitude_y","avg_longitude_x","TMP_MARKERS","TMP_INFO_WINDOWS","push","Marker","position","InfoWindow","content","removable","event","addListener","setPlaceMarker","ref","Axios","create","baseURL","process","cityApi","getGuList","a","get","data","console","log","getDongListByGuId","getSubCategory","placeApi","getPlace","query","post","getPlaceByPage","page","pageSize","params","initPlaceApi","Option","Select","makeOption","Object","keys","b","val","value","FilterSelect","currentSelect","onChangeMethod","optionList","style","width","onChange","KakaoSlider","setQuery","activated","setActivated","curValue","setCurValue","onClick","size","checked","counterActive","step","defaultValue","min","max","disabled","NaverSlider","FilterForm","setGu","setDong","subCategory","setSubCategory","setStoreList","curGu","setCurGu","curDong","setCurDong","curSubCategory","setCurSubCategory","guSelectChange","idx","result","status","message","guName","alert","guId","dongName","onClickEvent","parseInt","placeholder","maxLength","target","FoodList","foodList","onChangePage","itemLayout","dataSource","renderItem","item","Item","defaultCurrent","total","Sider","Layout","SiderBar","breakpoint","padding","backgroundColor","Header","Footer","Content","HotPlaceMapScreen","className","textAlign","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9c791db.chunk.js","sourcesContent":["export default (axios) => ({\r\n  getGuList: async () => {\r\n    try {\r\n      const { data } = await axios.get('/api/gu');\r\n      return data;\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  },\r\n\r\n  getDongListByGuId: async (id) => {\r\n    try {\r\n      const { data } = await axios.get(`/api/dong/${id}`);\r\n      return data;\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  },\r\n\r\n  getSubCategory: async () => {\r\n    try {\r\n      const { data } = await axios.get('/api/sub_category');\r\n      return data;\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  },\r\n});\r\n","import { atom } from 'recoil';\r\n\r\nexport const guState = atom({\r\n  key: 'gu',\r\n  default: [],\r\n});\r\n\r\nexport const dongState = atom({\r\n  key: 'dong',\r\n  default: [],\r\n});\r\n\r\nexport const subCategoryState = atom({\r\n  key: 'subCategory',\r\n  default: [],\r\n});\r\n\r\nexport const storeState = atom({\r\n  key: 'storeList',\r\n  default: [],\r\n});\r\n\r\nexport const queryState = atom({\r\n  key: 'query',\r\n  default: {\r\n    gu: 1,\r\n    dong: 1,\r\n    sub_category: 1,\r\n    place_name: '',\r\n    minimum_kakao_rating: null,\r\n    minimum_naver_rating: null,\r\n    minimum_instagram_hashtag: null,\r\n  },\r\n});\r\n\r\nexport const foodListState = atom({\r\n  key: 'foodList',\r\n  default: [\r\n    {\r\n      id: 1,\r\n      name: '상수동 밥한끼',\r\n      naverRating: 4.5,\r\n      kakaoRating: 4.5,\r\n      instagramHashtag: 10000,\r\n    },\r\n    {\r\n      id: 1,\r\n      name: '상수동 밥한끼',\r\n      naverRating: 4.5,\r\n      kakaoRating: 4.5,\r\n      instagramHashtag: 10000,\r\n    },\r\n    {\r\n      id: 1,\r\n      name: '상수동 밥한끼',\r\n      naverRating: 4.5,\r\n      kakaoRating: 4.5,\r\n      instagramHashtag: 10000,\r\n    },\r\n  ],\r\n});\r\n","export const makeInfoWindow = (place) => {\r\n  const {\r\n    name,\r\n    address,\r\n    kakao_url,\r\n    naver_url,\r\n    instagram_url,\r\n    instagram_hashtag,\r\n    kakao_star,\r\n    naver_star,\r\n  } = place;\r\n\r\n  return `<div class=\"card border-primary mb-3\" style=\"max-width: 18rem;\">\r\n        <div class=\"card-header\">가게 정보</div>\r\n        <div class=\"card-body \">\r\n            <div class=\"card-header\"> 이름 : ${name}</div>\r\n            ${\r\n              place.kakao_star !== null\r\n                ? `<div class=\"card-list\"><a href=${kakao_url} target=\"_blank\" class=\"card-link\">카카오</a><div class=\"card-text text-primary\">&nbsp;별점 : ${kakao_star}</div></div>`\r\n                : ''\r\n            }\r\n            ${\r\n              naver_star !== null\r\n                ? `<div class=\"card-list\"><a href=${naver_url} target=\"_blank\" class=\"card-link text-success\">네이버</a><div class=\"card-text text-success\">&nbsp;별점 : ${naver_star}</div></div>`\r\n                : ''\r\n            }\r\n            ${\r\n              instagram_hashtag !== null\r\n                ? `<div class=\"card-list\"><a href=${instagram_url} target=\"_blank\" class=\"card-link\" style=\"color: #6f42c1\">인스타그램</a><div class=\"card-text\" style=\"color: #6f42c1\">&nbsp;해시태그 : ${instagram_hashtag}</div></div>`\r\n                : ''\r\n            }\r\n            <p class=\"card-text\">주소 : ${address}</p>\r\n        </div>\r\n    </div>`;\r\n};\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport styled from 'styled-components';\r\nimport { storeState } from '../../atom';\r\nimport { makeInfoWindow } from '../../utils/KakaoMapUtil';\r\n\r\nconst KakaoMapContainer = styled.div`\r\n  width: 100%;\r\n  height: 880px;\r\n  /* border: 1px solid black; */\r\n\r\n  /* margin: 50px auto 0; */\r\n`;\r\nconst { kakao } = window;\r\n\r\nconst KakaoMap = (props) => {\r\n  const map = useRef();\r\n  const mapContainerRef = useRef();\r\n  const [markers, setMarkers] = useState([]);\r\n  const [infoWindows, setInfoWindows] = useState([]);\r\n\r\n  const [storeList, setStoreList] = useRecoilState(storeState);\r\n  useEffect(() => {\r\n    const options = {\r\n      center: new kakao.maps.LatLng(37.5666805, 126.9784147),\r\n      level: 3,\r\n    };\r\n\r\n    map.current = new kakao.maps.Map(mapContainerRef.current, options);\r\n  }, []);\r\n\r\n  const makeOverListener = (map, marker, infowindow) => {\r\n    return function () {\r\n      infowindow.open(map, marker);\r\n    };\r\n  };\r\n\r\n  const setPlaceMarker = (places) => {\r\n    clearMarkers();\r\n    let avg_latitude_y = 0;\r\n    let avg_longitude_x = 0;\r\n\r\n    const TMP_MARKERS = [];\r\n    const TMP_INFO_WINDOWS = [];\r\n    for (let place of places) {\r\n      const { address, dong, gu, name, latitude_y, longitude_x } = place;\r\n\r\n      TMP_MARKERS.push(\r\n        new kakao.maps.Marker({\r\n          map: map.current,\r\n          position: new kakao.maps.LatLng(\r\n            parseFloat(latitude_y),\r\n            parseFloat(longitude_x)\r\n          ),\r\n        })\r\n      );\r\n\r\n      avg_latitude_y += parseFloat(latitude_y);\r\n      avg_longitude_x += parseFloat(longitude_x);\r\n\r\n      TMP_INFO_WINDOWS.push(\r\n        new kakao.maps.InfoWindow({\r\n          content: makeInfoWindow(place),\r\n          removable: true,\r\n        })\r\n      );\r\n    }\r\n    for (let i = 0; i < TMP_MARKERS.length; i++) {\r\n      kakao.maps.event.addListener(\r\n        TMP_MARKERS[i],\r\n        'click',\r\n        makeOverListener(map.current, TMP_MARKERS[i], TMP_INFO_WINDOWS[i])\r\n      );\r\n      // kakao.maps.event.addListener(MARKERS[i],'mouseout',makeOutListener(INFO_WINDOWS[i]));\r\n    }\r\n    if (places.length !== 0) {\r\n      avg_latitude_y = avg_latitude_y / places.length;\r\n      avg_longitude_x = avg_longitude_x / places.length;\r\n      panTo(avg_latitude_y, avg_longitude_x);\r\n    }\r\n\r\n    setMarkers(TMP_MARKERS);\r\n    setInfoWindows(TMP_INFO_WINDOWS);\r\n  };\r\n\r\n  const panTo = (latitude_y, longitude_x) => {\r\n    const moveLatLon = new kakao.maps.LatLng(\r\n      parseFloat(latitude_y),\r\n      parseFloat(longitude_x)\r\n    );\r\n\r\n    map.current.panTo(moveLatLon);\r\n  };\r\n\r\n  const clearMarkers = () => {\r\n    for (let i = 0; i < markers.length; i++) {\r\n      markers[i].setMap(null);\r\n    }\r\n    setMarkers([]);\r\n    setInfoWindows([]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (storeList.length > 0) {\r\n      setPlaceMarker(storeList);\r\n    }\r\n  }, [storeList]);\r\n\r\n  return <KakaoMapContainer ref={mapContainerRef}></KakaoMapContainer>;\r\n};\r\n\r\nexport default KakaoMap;\r\n","import axios from 'axios';\r\nimport initCityApi from './initCityApi';\r\nimport initPlaceApi from './initPlaceApi';\r\n\r\nexport const Axios = axios.create({\r\n  baseURL: process.env.REACT_APP_SPRING_SERVER_API,\r\n});\r\n\r\nexport const cityApi = initCityApi(Axios);\r\nexport const placeApi = initPlaceApi(Axios);\r\n","export default (axios) => ({\r\n  getPlace: async (query) => {\r\n    try {\r\n      const { data } = await axios.post('/api/places', query);\r\n      return data;\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  },\r\n\r\n  getPlaceByPage: async (page, pageSize) => {\r\n    try {\r\n      const { data } = await axios.get('/api/places', {\r\n        params: {\r\n          page: page,\r\n          pageSize: pageSize,\r\n        },\r\n      });\r\n\r\n      return data;\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  },\r\n});\r\n","import { Select } from 'antd';\r\nconst { Option } = Select;\r\n\r\nexport const makeOption = (options) => {\r\n  const [a, b] = Object.keys(options[0]);\r\n  return options.map((val) => (\r\n    <Option key={val[a]} value={val[b]}>\r\n      {val[b]}\r\n    </Option>\r\n  ));\r\n};\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { Select } from 'antd';\r\nimport { makeOption } from '../../utils/FilterUtil';\r\n\r\nconst FilterSelect = ({ currentSelect, onChangeMethod, optionList }) => {\r\n  return (\r\n    <Select\r\n      value={currentSelect}\r\n      style={{ width: 120 }}\r\n      onChange={onChangeMethod}\r\n    >\r\n      {makeOption(optionList)}\r\n    </Select>\r\n  );\r\n};\r\n\r\nexport default FilterSelect;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { Button, Slider, Switch } from 'antd';\r\nimport { useRecoilState } from 'recoil';\r\nimport { queryState } from '../../atom';\r\n\r\nconst KakaoSlider = () => {\r\n  const [query, setQuery] = useRecoilState(queryState);\r\n  const [activated, setActivated] = useState(true);\r\n  const [curValue, setCurValue] = useState(3);\r\n\r\n  useEffect(() => {\r\n    setQuery({\r\n      ...query,\r\n      minimum_kakao_rating: curValue,\r\n    });\r\n  }, []);\r\n\r\n  const handleDisabledChange = (counterActive) => {\r\n    setActivated(counterActive);\r\n\r\n    if (counterActive === false) {\r\n      // toggle off 상태\r\n      setQuery({\r\n        ...query,\r\n        minimum_kakao_rating: null,\r\n      });\r\n    } else {\r\n      // toggle on 상태\r\n      setQuery({\r\n        ...query,\r\n        minimum_kakao_rating: curValue,\r\n      });\r\n    }\r\n  };\r\n\r\n  const sliderOnChange = (value) => {\r\n    setCurValue(value);\r\n    setQuery({\r\n      ...query,\r\n      minimum_kakao_rating: value,\r\n    });\r\n  };\r\n\r\n  const check = () => {\r\n    console.log(activated);\r\n    console.log(query);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={check}>check!!</Button>\r\n      <div>\r\n        KAKAO 별점:\r\n        <Switch\r\n          size=\"small\"\r\n          checked={activated}\r\n          onChange={handleDisabledChange}\r\n        />\r\n      </div>\r\n      <Slider\r\n        step={0.1}\r\n        defaultValue={curValue}\r\n        min={0}\r\n        max={5}\r\n        disabled={!activated}\r\n        onChange={sliderOnChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default KakaoSlider;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { Button, Slider, Switch } from 'antd';\r\nimport { useRecoilState } from 'recoil';\r\nimport { queryState } from '../../atom';\r\n\r\nconst NaverSlider = () => {\r\n  const [query, setQuery] = useRecoilState(queryState);\r\n  const [activated, setActivated] = useState(true);\r\n  const [curValue, setCurValue] = useState(3);\r\n\r\n  useEffect(() => {\r\n    setQuery({\r\n      ...query,\r\n      minimum_naver_rating: curValue,\r\n    });\r\n  }, []);\r\n\r\n  const handleDisabledChange = (counterActive) => {\r\n    setActivated(counterActive);\r\n\r\n    if (counterActive === false) {\r\n      // toggle off 상태\r\n      setQuery({\r\n        ...query,\r\n        minimum_naver_rating: null,\r\n      });\r\n    } else {\r\n      // toggle on 상태\r\n      setQuery({\r\n        ...query,\r\n        minimum_naver_rating: curValue,\r\n      });\r\n    }\r\n  };\r\n\r\n  const sliderOnChange = (value) => {\r\n    setCurValue(value);\r\n    setQuery({\r\n      ...query,\r\n      minimum_naver_rating: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        NAVER 별점:{' '}\r\n        <Switch\r\n          size=\"small\"\r\n          checked={activated}\r\n          onChange={handleDisabledChange}\r\n        />\r\n      </div>\r\n      <Slider\r\n        step={0.1}\r\n        defaultValue={curValue}\r\n        min={0}\r\n        max={5}\r\n        disabled={!activated}\r\n        onChange={sliderOnChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NaverSlider;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, Input } from 'antd';\r\nimport { useRecoilState } from 'recoil';\r\nimport { cityApi, placeApi } from '../../api/index.js';\r\n\r\nimport {\r\n  dongState,\r\n  guState,\r\n  queryState,\r\n  storeState,\r\n  subCategoryState,\r\n} from '../../atom';\r\n\r\nimport FilterSelect from './FilterSelect';\r\nimport KakaoSlider from './KakaoSlider.js';\r\nimport NaverSlider from './NaverSlider.js';\r\n\r\nconst FilterForm = () => {\r\n  const [gu, setGu] = useRecoilState(guState);\r\n  const [dong, setDong] = useRecoilState(dongState);\r\n  const [subCategory, setSubCategory] = useRecoilState(subCategoryState);\r\n  const [storeList, setStoreList] = useRecoilState(storeState);\r\n  const [query, setQuery] = useRecoilState(queryState);\r\n\r\n  const [curGu, setCurGu] = useState();\r\n  const [curDong, setCurDong] = useState();\r\n  const [curSubCategory, setCurSubCategory] = useState();\r\n\r\n  const guSelectChange = async (value, idx) => {\r\n    console.log(value, idx);\r\n    const data = await getDongListByGuId(idx.key);\r\n    setDong(data);\r\n  };\r\n\r\n  async function getGuList() {\r\n    const result = await cityApi.getGuList();\r\n    const { status, data, message } = result;\r\n    if (status === 200) {\r\n      setGu(data);\r\n      setCurGu(data[0].guName);\r\n    } else {\r\n      alert(message);\r\n    }\r\n  }\r\n\r\n  async function getDongListByGuId(guId) {\r\n    const result = await cityApi.getDongListByGuId(guId);\r\n    const { status, data, message } = result;\r\n    if (status === 200) {\r\n      setDong(data);\r\n      setCurDong(data[0].dongName);\r\n    } else {\r\n      alert(message);\r\n    }\r\n    return data;\r\n  }\r\n\r\n  async function getSubCategory() {\r\n    const result = await cityApi.getSubCategory();\r\n    const { status, data, message } = result;\r\n    if (status === 200) {\r\n      setSubCategory(data);\r\n      setCurSubCategory(data[0].name);\r\n    } else {\r\n      alert(message);\r\n    }\r\n  }\r\n\r\n  const onChangeGu = (value, key) => {\r\n    console.log(value, key);\r\n    setQuery({ ...query, gu: parseInt(key.key) });\r\n    setCurGu(value);\r\n    guSelectChange(value, key);\r\n  };\r\n\r\n  const onChangeDong = (value, key) => {\r\n    console.log(value, key);\r\n    setQuery({ ...query, dong: parseInt(key.key) });\r\n    setCurDong(value);\r\n  };\r\n\r\n  const onChangeSubCategory = (value, key) => {\r\n    console.log(value, key);\r\n    setQuery({ ...query, sub_category: parseInt(key.key) });\r\n    setCurSubCategory(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getGuList();\r\n    getDongListByGuId(1);\r\n    getSubCategory();\r\n  }, []);\r\n\r\n  const onClickEvent = async () => {\r\n    console.log(query);\r\n    const result = await placeApi.getPlace(query);\r\n    const { status, data, message } = result;\r\n    console.log(data);\r\n    if (status === 200) {\r\n      setStoreList(data);\r\n    } else {\r\n      alert(message);\r\n    }\r\n  };\r\n\r\n  const onInputChange = (event) => {\r\n    setQuery({\r\n      ...query,\r\n      place_name: event.target.value,\r\n    });\r\n  };\r\n\r\n  const isLoad = () => {\r\n    return gu.length && dong.length && subCategory.length;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoad() && (\r\n        <>\r\n          <FilterSelect\r\n            currentSelect={curGu}\r\n            onChangeMethod={onChangeGu}\r\n            optionList={gu}\r\n          />\r\n          <FilterSelect\r\n            currentSelect={curDong}\r\n            onChangeMethod={onChangeDong}\r\n            optionList={dong}\r\n          />\r\n          <FilterSelect\r\n            currentSelect={curSubCategory}\r\n            onChangeMethod={onChangeSubCategory}\r\n            optionList={subCategory}\r\n          />\r\n        </>\r\n      )}\r\n      <Input\r\n        placeholder=\"검색어를 입력하세요\"\r\n        maxLength={20}\r\n        onChange={onInputChange}\r\n      ></Input>\r\n      <KakaoSlider></KakaoSlider>\r\n      <NaverSlider></NaverSlider>\r\n      <Button onClick={onClickEvent}>검색</Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilterForm;\r\n","import React, { useEffect } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport { List, Pagination } from 'antd';\r\n\r\nimport { placeApi } from '../../api';\r\nimport { foodListState } from '../../atom';\r\n\r\nconst FoodList = () => {\r\n  const [foodList, setFoodList] = useRecoilState(foodListState);\r\n\r\n  // API 호출 하면 될듯\r\n  const onChangePage = async (page, pageSize) => {\r\n    return console.log('page ', page, 'pageSize: ', pageSize);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <List\r\n        itemLayout=\"vertical\"\r\n        dataSource={foodList}\r\n        renderItem={(item) => (\r\n          <List.Item key={item.name}>\r\n            <div>{item.name}</div>\r\n            <div>{item.naverRating}</div>\r\n            <div>{item.kakaoRating}</div>\r\n            <div>{item.instagramHashtag}</div>\r\n          </List.Item>\r\n        )}\r\n      ></List>\r\n      <Pagination onChange={onChangePage} defaultCurrent={1} total={50} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FoodList;\r\n","import React from 'react';\r\nimport { Layout } from 'antd';\r\n\r\nimport FilterForm from './filter/FilterForm';\r\nimport FoodList from './foodList/FoodList';\r\n\r\nconst { Sider } = Layout;\r\n\r\nconst SiderBar = () => {\r\n  return (\r\n    <Sider\r\n      breakpoint=\"lg\" // breakpoint 값보다 낮아지면 반응형으로 줄어듦\r\n      // collapsedWidth=\"0\" // breakpoint보다 낮아지면 트리거 발동되서 사이드바 없어짐.\r\n      width=\"400\"\r\n      style={{ padding: '10px', backgroundColor: 'yellow' }}\r\n    >\r\n      <FilterForm></FilterForm>\r\n      <FoodList></FoodList>\r\n    </Sider>\r\n  );\r\n};\r\n\r\nexport default SiderBar;\r\n","import React, { useEffect } from 'react';\r\nimport KakaoMap from '../components/map/KakaoMap';\r\nimport SiderBar from '../components/SideBar';\r\nimport { Layout } from 'antd';\r\n// import 'antd/dist/antd.css';\r\n\r\nconst { Header, Footer, Content } = Layout;\r\n\r\nconst HotPlaceMapScreen = () => {\r\n  return (\r\n    <Layout>\r\n      <SiderBar></SiderBar>\r\n      <Layout>\r\n        <Header\r\n          className=\"site-layout-sub-header-background\"\r\n          style={{ padding: 0, backgroundColor: 'white' }}\r\n        ></Header>\r\n        <Content>\r\n          <KakaoMap></KakaoMap>\r\n        </Content>\r\n        <Footer style={{ textAlign: 'center' }}>Hotplace-map</Footer>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default HotPlaceMapScreen;\r\n","import HotPlaceMapScreen from './screens/HotPlaceMapScreen';\r\nimport { RecoilRoot } from 'recoil';\r\nimport 'antd/dist/antd.css';\r\nimport './index.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <RecoilRoot>\r\n      <HotPlaceMapScreen></HotPlaceMapScreen>;\r\n    </RecoilRoot>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}